(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    233580,       4537]
NotebookOptionsPosition[    231437,       4493]
NotebookOutlinePosition[    231836,       4509]
CellTagsIndexPosition[    231793,       4506]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.821381131940813*^9, 3.821381137314818*^9}},
 CellLabel->
  "In[348]:=",ExpressionUUID->"08076037-0b70-471b-a470-594aaced9b0a"],

Cell[CellGroupData[{

Cell["\<\
Example Plotting Script for the Gershgorin-Harlim-Majda 2010 System\
\>", "Title",
 CellChangeTimes->{{3.8213811457223153`*^9, 
  3.821381161170312*^9}},ExpressionUUID->"55b3bb64-40ea-41cd-99de-\
9365c5bfe706"],

Cell[CellGroupData[{

Cell["Import Data", "Section",
 CellChangeTimes->{{3.8213811692584043`*^9, 
  3.8213811710185585`*^9}},ExpressionUUID->"88421183-10a9-47b4-b6d0-\
76cc66ed4b59"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"hereDir", " ", "=", " ", 
   RowBox[{"NotebookDirectory", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataDir", " ", "=", " ", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{"hereDir", ",", "\"\<..\>\"", ",", "\"\<build\>\""}], "}"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"runCount", " ", "=", " ", "250"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"importNetCDFArg", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"\"\<Datasets\>\"", ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"StringJoin", "[", 
        RowBox[{"\"\<run\>\"", ",", 
         RowBox[{"StringPadLeft", "[", 
          RowBox[{
           RowBox[{"ToString", "[", "i", "]"}], ",", "8", ",", "\"\<0\>\""}], 
          "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "runCount"}], "}"}]}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rawData", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{"dataDir", ",", "\"\<out.nc\>\""}], "}"}], "]"}], ",", 
     "importNetCDFArg"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.820686043166751*^9, 3.820686059446395*^9}, {
   3.8206861438866262`*^9, 3.8206861872146964`*^9}, {3.820686239647986*^9, 
   3.8206862954703627`*^9}, {3.820686388391388*^9, 3.8206863888378973`*^9}, {
   3.820686485759138*^9, 3.8206865521409683`*^9}, {3.8206866750222254`*^9, 
   3.8206867265003204`*^9}, 3.8206869620371175`*^9, {3.8206871073724585`*^9, 
   3.8206871105066657`*^9}, {3.8206872811802483`*^9, 3.820687294905714*^9}, {
   3.820687348786935*^9, 3.8206874461449327`*^9}, {3.8206874887065797`*^9, 
   3.8206875293369565`*^9}, {3.8206878727291517`*^9, 3.820687873208151*^9}, {
   3.8206879065128613`*^9, 3.8206879440086737`*^9}, {3.8206879835911255`*^9, 
   3.820688065815713*^9}, {3.8206880987856264`*^9, 3.820688100566532*^9}, 
   3.8206882910389967`*^9, {3.820750096303379*^9, 3.820750100117984*^9}, 
   3.8207508960582376`*^9, {3.8207532588027573`*^9, 3.820753297233626*^9}, {
   3.8207540721182876`*^9, 3.820754072212288*^9}, {3.8212801568558717`*^9, 
   3.821280166069871*^9}, {3.821381179172432*^9, 3.8213813552191763`*^9}, {
   3.8213813928306475`*^9, 3.8213815031720095`*^9}, {3.821382057959917*^9, 
   3.8213821006472054`*^9}, {3.82138217662315*^9, 3.8213822610470123`*^9}, {
   3.821382327944832*^9, 3.821382366090685*^9}, 3.8213824732017555`*^9, 
   3.821384028623496*^9, {3.821384348336568*^9, 3.8213843611595917`*^9}, 
   3.8213846639464083`*^9, {3.821385615701259*^9, 3.8213856164361253`*^9}},
 CellLabel->
  "In[243]:=",ExpressionUUID->"b6b7e482-073c-406c-a85c-7c6cf90b342a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Single-Run Plot", "Section",
 CellChangeTimes->{{3.8213826897127085`*^9, 
  3.82138269230471*^9}},ExpressionUUID->"c39444d4-d1f7-47d5-937f-\
c24d658f82f5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"runNum", " ", "=", "104"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"timeStepNum", " ", "=", " ", 
   RowBox[{
    RowBox[{"rawData", "[", 
     RowBox[{"[", "runNum", "]"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{";;", ",", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"time", "=", 
   RowBox[{
    RowBox[{"rawData", "[", 
     RowBox[{"[", "runNum", "]"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{";;", ",", "2"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"addBias", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"rawData", "[", 
      RowBox[{"[", "runNum", "]"}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{";;", ",", "3"}], "]"}], "]"}], " ", "+", " ", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{
      RowBox[{"rawData", "[", 
       RowBox[{"[", "runNum", "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{";;", ",", "4"}], "]"}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"multBias", " ", "=", " ", 
   RowBox[{
    RowBox[{"rawData", "[", 
     RowBox[{"[", "runNum", "]"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{";;", ",", "5"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"stateVar", " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"rawData", "[", 
       RowBox[{"[", "runNum", "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{";;", ",", "6"}], "]"}], "]"}], " ", "+", " ", 
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{
       RowBox[{"rawData", "[", 
        RowBox[{"[", "runNum", "]"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{";;", ",", "7"}], "]"}], "]"}]}]}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Abs", "[", "addBias", "]"}], ",", "multBias"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Additive Bias (Norm)\>\"", ",", " ", "\"\<Multiplicative Bias\>\"", 
      ",", " ", "\"\<State Variable (Norm)\>\""}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.821382385944387*^9, 3.8213824509115067`*^9}, {
   3.8213824831146355`*^9, 3.8213824894427414`*^9}, {3.821457434223756*^9, 
   3.8214574648370495`*^9}, 3.8214575794783154`*^9, 3.8214576398219585`*^9, {
   3.8214674957964773`*^9, 3.821467522888477*^9}},
 CellLabel->
  "In[594]:=",ExpressionUUID->"b6b1ee03-c897-40f0-bf30-8bd12057bdd9"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
zDtKfnf83N67XZt88rujOtXd4GIl+d0Rplux/SX9qnKHm96ATheV/nug4aLh
zRPvyO8Bu3f+P6Kekd8D9c7nOz5+Sn4PtOg16dDzMvJ7wF6surHjOfJ7wK1p
0th528jvgcthwWHTz5DfA6uvJwxtWUx+T0ysyjc3+0l+T2R8fKV6/zf5PXFH
Zjbf4wP5PdHCdeWp4Evk98SKdociuyn3vyes37559pj9izxREfAAJz+S3xOH
Zz51GtXqiILfCwMLFrdy1VNgbS+Eelf6Z9SR3wvTsiyybavJ74XgxJJLr7le
Ai8YJ0suOzwivxfSHo9pqleuvxckTcdccpT8XhhRMWv5YjXye2P2mRM/Rnyn
fm90uV85+8R/5PfGkuP22bIS8nvjw0YDnbw2iv4Cb0Re62rn3kR+b9gf3yse
xfUp8sbErwM+fN9Ofm8ERsxQE2Vw/X2QO3RMUWvmC20f3LzaOKSW7fDBq8aF
dSeYvxx9MGmCa6cNW6nfBy2KVHfpM36zfGC3M0QjVkJ+H3zrs8F903Hy+6CH
jmytKv1SWY32Kx6HRTO/aK/GN/cNK2fdI/9qfHS36PbqOflXY9wEd/neJ+Rf
DZ8WRR9Lasm/GobyE2cu3yf/amT0/bdvOPdv1Wo4aEzQcD9Lfl94/no81IDr
o+2L0GnDT8xMJb8vKuO/pMZTr6MvLqdeGrVQGf++yA6cExDP9cryRebq/X6n
lfHvi8NuR/c7XyS/L1w3vU1p/4D8fvDX9Iu9cJ38fpB491YX7CK/H2p07t+q
LiK/H/wOj969mfEm8IN+wn3V4w/J74eT7V8M2HCB/H7QFk1dYsV4r/LD2y77
pq7nflLxx1v5if3Dfyiwpj9yMopVOr7mfPyRdrDELaJcgfX9UbBTX+5Efvij
x22LRamcn6U/9P46uR2+wvn64/dDw22fuB/9m/mSm+KjX3L+/rBa6pC6k/GY
7o/xv6Z8HM/5ZPljZ9me510HKdrzmtuvm7ssW6HARf5IneHc/spCBS71h/nk
8b1WuypwlT8Wlie06OKowHX+eLPfcG0bb8ZfAFKn9nq72FCBNQNQP2fI+1cj
mQ8CII0acDRcU4H1A9D61jeTH8r9GQDLnV7fjajXMgBTN/3dFllA/QF4OWOV
uh3Pe/8ALGioe2SeTf0BWJ57xL2R+Ts9AG93ZxQc5v7ICsD0G1vu2DLf5AVg
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
/TK4X83SUKNbc/h+8376HxJ86UQ=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
D78/ESpRe14UApX/bdj1jfyPwlsd5edxNuR/FBKWC3Wnl7H2iijsH/L8yosC
xi1R+HDCeI1lK+OuKDSfiXAeaUT+R4OvMcjF5gVrV43GVReD8KPq5H80qsY0
n8p5x9qNopGjvGfsmgzGiIbcc/dxvP2MHaJR673Y7l88G8+JxqKHGXX77jIO
iUbNIP/O6ynkfzT0r96J7KL5zYrGvJmhZbWkd140dOWaj+9IJv+jMVvXIc96
MfkfjW2Vk86/WUv6R2Nz5pumxQGkfzTemJzy73Yl/aPR576CdVka+R+DvH3r
ivMvkP4x4IYsOaNkSv7HwC3ZXEt+M+kfg1HD3k/O5bxm/seg/0UPzQY+Y4cY
CNdwekmfM+bE4EwrX2tVLuOQGNxzOb9obCdjbgycf05QK2pgnBWDomVTimbc
ZpwXg2KZ0uOhFxkXxOB60Cfvm48YF8egQiFv2LoZ7cz/GFgP9Nm2U4txSwxu
Dlqdf9OfcVcMrgX0C16VzlguFllzdq8JXcRYNRb3JlyTOo9lrBWLUabWqXs2
MDaKRWn+DEWNq4wRi4bsAzV/ixk7xKKr/z7Xda8Yc2IRkpujY9/KOCQWNTtk
agOV3zD/Y6FWGX1rrzzjrFi8CSl1rjzL+ufF4pT3mvnlmYwLYqHr/m+C9V/G
xbGod7jXfngBG18RCyfFHMcLpxi3xGLTsasLlO0Zd8Vi8oHhL1xMGMvFYeI1
x3FnabxqHAaf0+bI+zPWisOvE+vC4xoYG8XBuaby7po8xoiD/LJ+/RoTGTvE
wWBp7IWLFxlz4uBRqj58+TvGIXHYe6kuacB38j8OkWd3mt9rI//jEDFglfOo
24zz4pCZ2OLNaWFcEAc1/ROpBmsZF8dB65qbd44Z+R8Hy0dpHr2vkf9xWGGp
5BSj/Zb5H4fhs7suTpzHWC4eU/3FnkePMVaNh4Ov1Kj+I2OteNwc/a/haSZj
o3jsVTUU1I9jjHhsN+mX8uEx+R+PU+NuqfWrJv/jUS07ebxfJ/kfj1rNi3XV
o9h4bjzk36b8a/pK/sdj+pePk1Jms/a8eJR5KmtoDHvH/I9H6il97dF/WHtx
PIrlBt269opxRTy8j3krv1jC+rf0+Ff1+f4HQ8Zd8VCrOepp6c1YLgG/3SsO
jO1grJqAttkikYcpY60EOP9oHtD1i/xPQHVETolOM/mfgAellQM48qy/Q894
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
9Bchc5PPaT+6/20RYdv+JNleup9tF+GDqv+eCKqHu0SoKhm8MWk91X8itIly
F3RQvSiXCp3pNp5qVXT+S8XL728Mn88j/VMx+vi/s7lbSf9UuFfv/DNSi+r/
VBQ1BU/740n1fyq4l29rlNL5zSgVab38qj7SeckkFeafHor70/cjFWf7cXQM
9Un/VPQW6+WvCKf79FREXJi/t5FH9V8qMt7vOKi9leq/VCy4Mt2ET/uJTyq+
vLM+PdGF6r9U1GlnGYV4Uv2XCm2fubH5B0j/VGwt9Ms/2EH6pyKlsXtg/V7S
PxVLhWYja2WkfypiYj27VP6Q/qlonCRaMm4y1f+pONlZedJ1DOmfikfKyjXm
xaR/z/d8y/v12YP0T8XHTaqHTpxk7eWpWMIVnXXYQe8ZPf4eTrywn9ZXbSqM
htooGND3taRi1t9stRXWjNtT0XE7Xnn2QHrv6Jm/6y7DEuwYd6eidotXe+07
2v/FiDs9w2avPO3/Yqw//KE4LI3ew8Q4NHTQ+Nk3GKuL8XauYoGuG2MtMRx3
LXQcOJmxXk97QHh1Rxa9l4nxqY/PgrVajE3EUF7XkmNrQ+9nYgjH7pmiNo2x
jRgvIscVGl+i9zQxJijXdz0A6S9G/5mL4nOlpL8Y10zH2X0/RPr32H9Xu6j2
Bukv7qlfTo8Z5UT6i9FpXztdOpn0F2PwkK8WZqNIfzFMHxhXrttA+ouxd7pP
yYN80l8My9u+bx/cIv3FCKwzvmNF+0G+GMtWpM2wHUn6i1FYekXpnAud/8To
Y6mk4viK9S8Wo2y7tX4w6Vsuht2H1R1JZK+i5/farYYfpfVeK8bJgo8rRl4m
/cU4s+mcre5Yin8xnkh8FjbXkP5i6K0wFnV8IP3FsO7Wv/mH3pvk0vDa4q3V
ak+K/zSMG3RrfRLlR9U0TA1fdu8k7Qfqabg5yTXJU43iPw2Vfy7VPCyj/T8N
t8YPDjDeQvGfBrnRnK1GIZT/07CjpbUqV5nyfxqKVLqOWeswtkmDt+5iKzl6
L3RIw1mlQRpSep9zSoPGciu3uxRfnDQ8hKekmPKDTxo8dvcOaKX8EZIGXa/u
rdOn0v6fhgvPB0rm0PsWNw3bp4c03phJ5/80uF13PcWj9qw0hCh2m1RXkP5p
qFZSPhH5lPRPw0IlxaAFq0j/NOzpHKhzIYfe69KQZXbkqPU6iv80JN4yafS9
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
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {}, {}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {}, {}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 1001.}, {0, 0.00001331444686951529}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"Additive Bias (Norm)\"", "\"Multiplicative Bias\"", 
       "\"State Variable (Norm)\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.821382478900752*^9, 3.8213824898157377`*^9}, 
   3.8213845385967083`*^9, 3.8213850185611954`*^9, 3.8213851561619987`*^9, {
   3.8213852055414762`*^9, 3.8213852351376038`*^9}, 3.8213853423596525`*^9, 
   3.8213853748933487`*^9, {3.8213854305707912`*^9, 3.8213854571005306`*^9}, 
   3.8213855561707735`*^9, 3.8213855903423214`*^9, 3.821385643511983*^9, 
   3.821456303909703*^9, 3.821457435008873*^9, 3.8214574660290504`*^9, {
   3.821457575659376*^9, 3.821457579902314*^9}, 3.821457640668968*^9, 
   3.8214586661332855`*^9, 3.821459215480752*^9, 3.821459388189677*^9, {
   3.821467496918476*^9, 3.821467523187476*^9}},
 CellLabel->
  "Out[600]=",ExpressionUUID->"2ab1f78e-c87f-41c2-9bf6-c0d123c51d8e"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8214655510665417`*^9, 
  3.8214655523429604`*^9}},ExpressionUUID->"71d64a83-ce98-446e-900c-\
9cbe3ee32804"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Analytic Equations", "Section",
 CellChangeTimes->{{3.8214659408135877`*^9, 
  3.821465943854271*^9}},ExpressionUUID->"21289297-ffcd-476b-a7b7-\
f0805a581157"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"meanBAnal", "[", "t_", "]"}], ":=", " ", 
  RowBox[{"meanB", " ", "+", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"meanB0", " ", "-", " ", "meanB"}], ")"}], 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"lambdaB", " ", 
      RowBox[{"(", 
       RowBox[{"t", " ", "-", " ", "t0"}], 
       ")"}]}]]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"varBAnal", "[", "t_", "]"}], ":=", 
  RowBox[{
   RowBox[{"varB0", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "dampB", " ", 
      RowBox[{"(", 
       RowBox[{"t", " ", "-", " ", "t0"}], ")"}]}]]}], "+", 
   RowBox[{
    FractionBox[
     SuperscriptBox["noiseStrB", "2"], 
     RowBox[{"2", " ", "dampB"}]], 
    RowBox[{"(", 
     RowBox[{"1", " ", "-", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "dampB", " ", 
        RowBox[{"(", 
         RowBox[{"t", " ", "-", " ", "t0"}], ")"}]}]]}], 
     ")"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"covBConjgBAnal", "[", "t_", "]"}], ":=", 
  RowBox[{"covB0ConjgB0", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"2", " ", "lambdaB", " ", 
     RowBox[{"(", 
      RowBox[{"t", " ", "-", " ", "t0"}], ")"}]}]]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meanGammaAnal", "[", "t_", "]"}], ":=", 
  RowBox[{"meanGamma", " ", "+", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"meanGamma0", " ", "-", " ", "meanGamma"}], ")"}], 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "dampGamma"}], 
      RowBox[{"(", 
       RowBox[{"t", " ", "-", " ", "t0"}], 
       ")"}]}]]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"varGammaAnal", "[", "t_", "]"}], ":=", 
  RowBox[{
   RowBox[{"varGamma0", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "dampGamma", " ", 
      RowBox[{"(", 
       RowBox[{"t", " ", "-", " ", "t0"}], ")"}]}]]}], "+", 
   RowBox[{
    FractionBox[
     SuperscriptBox["noiseStrGamma", "2"], 
     RowBox[{"2", " ", "dampGamma"}]], 
    RowBox[{"(", 
     RowBox[{"1", " ", "-", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "dampGamma", " ", 
        RowBox[{"(", 
         RowBox[{"t", " ", "-", " ", "t0"}], ")"}]}]]}], 
     ")"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.8214659500885353`*^9, 3.821465965015117*^9}, {
  3.8214659971979265`*^9, 3.8214661365976*^9}, {3.8214670269633837`*^9, 
  3.8214670785216756`*^9}},
 CellLabel->
  "In[511]:=",ExpressionUUID->"b58e96eb-e880-4166-bc9a-29788bf26a89"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Multi-Run Mean Plot", "Section",
 CellChangeTimes->{{3.8213827004567094`*^9, 
  3.821382705440709*^9}},ExpressionUUID->"c7128a13-a319-4e19-9e3b-\
554e8a5aaa55"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"t0", " ", "=", " ", 
   RowBox[{"time", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalDelta]t", " ", "=", " ", 
   RowBox[{
    RowBox[{"time", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "-", 
    RowBox[{"time", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"meanB", " ", "=", " ", 
   RowBox[{"0.0", "+", 
    RowBox[{"\[ImaginaryI]", " ", "0.0"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meanB0", " ", "=", " ", 
   RowBox[{"0.0", " ", "+", " ", 
    RowBox[{"\[ImaginaryI]", " ", "0.0"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dampB", " ", "=", " ", "0.15"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"oscFreqB", " ", "=", " ", "1.78"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lambdaB", " ", "=", " ", 
   RowBox[{
    RowBox[{"-", "dampB"}], " ", "+", " ", 
    RowBox[{"\[ImaginaryI]", " ", "oscFreqB"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"noiseStrB", " ", "=", " ", "0.7745"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"varB0", " ", "=", " ", "0.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"covB0ConjgB0", " ", "=", " ", "0.0"}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"meanGamma", " ", "=", " ", "1.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meanGamma0", " ", "=", " ", "0.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dampGamma", " ", "=", " ", "0.015"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"noiseStrGamma", " ", "=", " ", "5.0"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"varGamma0", " ", "=", " ", "0.0"}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meanAddBias", "=", 
   RowBox[{"Mean", "[", 
    RowBox[{
     RowBox[{"rawData", "[", 
      RowBox[{"[", 
       RowBox[{";;", ",", ";;", ",", "3"}], "]"}], "]"}], " ", "+", " ", 
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"rawData", "[", 
       RowBox[{"[", 
        RowBox[{";;", ",", ";;", ",", "4"}], "]"}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meanMultBias", " ", "=", " ", 
   RowBox[{"Mean", "[", 
    RowBox[{"rawData", "[", 
     RowBox[{"[", 
      RowBox[{";;", ",", ";;", ",", "5"}], "]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"meanStateVar", " ", "=", " ", 
    RowBox[{"Mean", "[", 
     RowBox[{
      RowBox[{"rawData", "[", 
       RowBox[{"[", 
        RowBox[{";;", ",", ";;", ",", "6"}], "]"}], "]"}], " ", "+", " ", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"rawData", "[", 
        RowBox[{"[", 
         RowBox[{";;", ",", ";;", ",", "7"}], "]"}], "]"}]}]}], "]"}]}], 
   ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"varAddBias", " ", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Covariance", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"rawData", "[", 
         RowBox[{"[", 
          RowBox[{";;", ",", "i", ",", "3"}], "]"}], "]"}], " ", "+", " ", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"rawData", "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", "i", ",", "4"}], "]"}], "]"}]}]}], ",", 
       RowBox[{
        RowBox[{"rawData", "[", 
         RowBox[{"[", 
          RowBox[{";;", ",", "i", ",", "3"}], "]"}], "]"}], " ", "+", " ", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"rawData", "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", "i", ",", "4"}], "]"}], "]"}]}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "time", "]"}], ",", "1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"covAddBiasConjgAddBias", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Covariance", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"rawData", "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", "i", ",", "3"}], "]"}], "]"}], " ", "+", " ", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"rawData", "[", 
           RowBox[{"[", 
            RowBox[{";;", ",", "i", ",", "4"}], "]"}], "]"}]}]}], ",", 
        RowBox[{
         RowBox[{"rawData", "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", "i", ",", "3"}], "]"}], "]"}], " ", "-", " ", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"rawData", "[", 
           RowBox[{"[", 
            RowBox[{";;", ",", "i", ",", "4"}], "]"}], "]"}]}]}]}], "]"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "time", "]"}], ",", "1"}], "}"}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"varMultBias", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Covariance", "[", 
       RowBox[{
        RowBox[{"rawData", "[", 
         RowBox[{"[", 
          RowBox[{";;", ",", "i", ",", "5"}], "]"}], "]"}], ",", 
        RowBox[{"rawData", "[", 
         RowBox[{"[", 
          RowBox[{";;", ",", "i", ",", "5"}], "]"}], "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "time", "]"}], ",", "1"}], "}"}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Re", "[", 
        RowBox[{"meanBAnal", "[", 
         RowBox[{"t0", " ", "+", " ", 
          RowBox[{"i", " ", "*", " ", "\[CapitalDelta]t"}]}], "]"}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", 
         RowBox[{
          RowBox[{"Length", "[", "time", "]"}], "-", "1"}]}], "}"}]}], "]"}], 
     ",", 
     RowBox[{"Re", "[", "meanAddBias", "]"}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Analytic (Real)\>\"", ",", "\"\<Numerical (Real)\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Mean b Across 250 runs\>\""}]}], 
  "]"}], "\n", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Re", "[", 
        RowBox[{"varBAnal", "[", 
         RowBox[{"t0", " ", "+", " ", 
          RowBox[{"i", " ", "*", " ", "\[CapitalDelta]t"}]}], "]"}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", 
         RowBox[{
          RowBox[{"Length", "[", "time", "]"}], "-", "1"}]}], "}"}]}], "]"}], 
     ",", 
     RowBox[{"Re", "[", "varAddBias", "]"}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Analytic (Real)\>\"", ",", "\"\<Numerical (Real)\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Var(b) Across 250 runs\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Re", "[", 
        RowBox[{"covBConjgBAnal", "[", 
         RowBox[{"t0", " ", "+", " ", 
          RowBox[{"i", " ", "*", " ", "\[CapitalDelta]t"}]}], "]"}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", 
         RowBox[{
          RowBox[{"Length", "[", "time", "]"}], "-", "1"}]}], "}"}]}], "]"}], 
     ",", 
     RowBox[{"Re", "[", "covAddBiasConjgAddBias", "]"}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Analytic (Real)\>\"", ",", "\"\<Numerical (Real)\>\""}], 
     "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", "\"\<Cov(b,Conjg(b)) Across 250 runs\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"meanGammaAnal", "[", 
        RowBox[{"t0", " ", "+", " ", 
         RowBox[{"i", " ", "*", " ", "\[CapitalDelta]t"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", 
         RowBox[{
          RowBox[{"Length", "[", "time", "]"}], "-", "1"}]}], "}"}]}], "]"}], 
     ",", "meanMultBias"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Analytic\>\"", ",", "\"\<Numerical\>\""}], "}"}]}], ",", 
   " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
   RowBox[{
   "PlotLabel", "\[Rule]", "\"\<Mean \[Gamma] Across 250 Runs\>\""}]}], 
  "]"}], "\n", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"varGammaAnal", "[", 
        RowBox[{"t0", " ", "+", " ", 
         RowBox[{"i", " ", "*", " ", "\[CapitalDelta]t"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", 
         RowBox[{
          RowBox[{"Length", "[", "time", "]"}], "-", "1"}]}], "}"}]}], "]"}], 
     ",", "varMultBias"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Analytic\>\"", ",", "\"\<Numerical\>\""}], "}"}]}], ",", 
   " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
   RowBox[{
   "PlotLabel", "\[Rule]", "\"\<Var(\[Gamma]) Across 250 Runs\>\""}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.821382927179906*^9, 3.821382954377942*^9}, {
   3.821385190355478*^9, 3.8213851958274775`*^9}, {3.8213852468691573`*^9, 
   3.821385315515458*^9}, {3.8214563189717035`*^9, 3.8214563785377007`*^9}, {
   3.8214564112196894`*^9, 3.8214564678090634`*^9}, 3.82145760920745*^9, {
   3.821458294636606*^9, 3.821458300938607*^9}, {3.821465073091115*^9, 
   3.82146510348965*^9}, {3.8214655559860764`*^9, 3.8214655720644636`*^9}, {
   3.8214656307852015`*^9, 3.8214656496149263`*^9}, {3.8214661491279507`*^9, 
   3.821466245941701*^9}, {3.8214662956534233`*^9, 3.8214664339084797`*^9}, 
   3.82146698829496*^9, {3.8214670836686735`*^9, 3.8214672155863447`*^9}},
 CellLabel->
  "In[540]:=",ExpressionUUID->"1722f19a-61c2-42e8-a01e-6895ea42ac81"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
4Rk/cPjX0itc4DUu8QZXeIsj3v3f/wGMPonD
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
mGuE0YVf7RwzmLBNFo5O+NtmWNd4/w8WQUnu
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {}, {}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {}, {}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Mean b Across 250 runs\"", TraditionalForm], 
     PlotRange -> {{0., 1001.}, {-2.49968357377036*^-6, 0}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Analytic (Real)\"", "\"Numerical (Real)\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8213852056174765`*^9, 3.8213852352166157`*^9}, {
   3.8213853161524553`*^9, 3.8213853424336524`*^9}, 3.8213853749663506`*^9, {
   3.821385430644794*^9, 3.8213854571755323`*^9}, 3.821385556241845*^9, 
   3.821385590414323*^9, 3.8213856435879836`*^9, 3.821456309137703*^9, 
   3.821456379678618*^9, 3.82145641364069*^9, 3.8214564688590617`*^9, {
   3.8214575833633146`*^9, 3.8214576099754515`*^9}, 3.821458302253604*^9, 
   3.8214586803471766`*^9, 3.8214592239712625`*^9, 3.821459393710678*^9, {
   3.821465085335637*^9, 3.8214651043656487`*^9}, 3.821465573410907*^9, 
   3.8214656507515945`*^9, {3.821466197880692*^9, 3.821466221175948*^9}, {
   3.821466349448063*^9, 3.82146635294136*^9}, 3.82146643586512*^9, 
   3.8214669912809596`*^9, 3.8214671195466733`*^9, 3.8214672192247334`*^9},
 CellLabel->
  "Out[561]=",ExpressionUUID->"e3031817-c138-4427-a6f7-de346ada711c"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV13lUjI/7PvDJWtZSqGyT8M4SJUuWuOzZJ2slmTZt1LTv9cxMNUszlT2E
QQjJZElEJkuKUNkSZbIkW8qa/dvvfO7nj1//OK9zz/3czzXXOcTMPXCZVzsO
h/OmPYfz//7830/zdM7//4ObNhxlDnfrtP9RF9VV+0NyuFlkfZRbJEnaWeeS
jdDQo+OMHO4ZsjE+OGZYP7I4T+6PmODY3u2si8hczDnBD9+eWUweDIX09JPj
3GvkITAtPzy5OKuEPAyN4Qu2PLQoI1sgWrb91bucW+QRWNR+i7WO9R3yKAg+
7Z6S4lxBHo0BO2Y+2ZZZSbaCb2BxhKquimyNHTFGBse598ljcaRwypGz7g/I
Nlg9ZspkTdZD8jg0Puxx82bDI/J4rDmVv+qBxWPyBAQWT9A+86shT8ShDpL1
b3OekG0xOeb0my9NT8mT8Hmo2vefVR15MhZ2SGrQC3lGnoLBXU2s5M5a8lT0
zHXyT/vF2g4f/Doc2ppZT56GizNManfaPSdPx5qxuwz31bEG3k5Nss9KePE/
M4C/W03MUe5Lms/AxX27T+QWk5kZ+PO9pPa0+yuaz8QYP5du59s30Hwmxn5b
O6koi8yZhaGZZZ5X57ym+SzouexLLW0gc2bj0vj6/NuSRprPhvtwZW2VxRua
z8GjCYfaVZeRmTlwdR06rNbvLc3n4sw+A/vnXd/RfC6e/PT1eZ1D5szD58BR
kveL39N8Hn79dcxqaSJz7PHlyMfL39I+0NweRX6fHv+yaqL5fETOW/eJU0Vm
5qPdNFu9TiEfab4A04/YpXXs0kzzBQidamQidSZzFuJg3aADXY6z84U4r3Qb
ofzFzhehdH51Xs9FLTRfhMu9kmw3Z5I5i5HbuL7I6AM7X4ztt+Jm7bD7RPMl
CC8su2GSSmaWYFrBwoWZdex8Kf4Vt7szcMxnmi/FkeqPS/cnkDk82P82qDSv
IIOH56N8HQ5zv9DnefDw+1ZhEUTW8FB7pmDp8WIyxwFLu6lvW/b6SvsOuCB4
ukDtTmYc0P35tBtjT5M1DrDnP5p5tv032l+GlHcHL01cQcYynBMfnnghi8ws
wy2LZ+qpX8maZXhds3D45TnfaX853u1sUs3YTsZyNHqV9L3WQGaW4/a0+8q5
E1tpfzmOD+nbvkxC5qwA0zctYmE1GSswra/du9sWP2h/Bb6ac115UWTNCmyx
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
ViqGK8n8RMxZnHxg0g6yTyJ0u64vmL+fLEiEt3zUHafj5MhEeB1//ML3LJlJ
RLuAjT+iLpOliZj66XUPeRk5PRG9jecP2XWPnJEIxb/0ScdqyapE7JdeXnLh
NTk7EStP3/e42UJWJ+LIvorIml/kgkTssDytfNtxBPWfiP/Wxh742ZNcmojl
S0ad62JKrkjEoPort0yHkKsTIesN7YjRZG0iNnXN+jLZltyYiIkHm3QXziQ3
JyLu6aABaxaRWxPBfzTR2n8VmZOE+pAJc2L4ZN0kcKr6OaX4kfWTUFT5esPu
ULJxEvqF7GKOx5O5Sej90GZroZRskYTcmtNHbm0mWyWhgTEtfJJJtk1CYaP3
nXeHyUjCmE+763+pyfZJmLkn/0vXQjIvCZ/0Cjr3v052TMIMY5XpqLtkftt+
aYDl1MdknyRcmDQEi16QBUl4vkGzzOUDOTIJOWazvDZ8JzNJ6JWRExGrM5L6
T0Jf9W+Zois5ve15MpvMzN7kjCT86uCQmzOIrErCE7OVmovDydlJcOKgqtyG
rE5CGGPw8qkduaDtfa+UfX0/j6xJgjzJp/MfB3JpEoRdmoy7u5ArktDHwXnE
gPXk6iTMn3RiiqWArE1C/6sNi+yiyY1JUPTo7Lo4kdychN2/ugeuTSW3tu3L
fyVszCBzkrGl5m563AGybjLiyuX7lTlk/WR04o86tSefbJyMUWfPXDmhIXOT
0XLc/N6lm2SLZKycHfXi9n2yVTJW7T37ubaObJuMbzur2zc1kpEMm9XPDf9+
ItsnQz+/yrzHHzIvGSn5R20Gdh5F/SfjYKT3rNEGZH4ynJ92XT6tH9knGXn1
292XDCULkpGVrRvsOoYcmYwJBm7CgElkJhk+/VTp8bPI0rb56+v7UheT09v2
V1Tl7l1NzkhGrvj6pVw3sioZjiv2lRf5k7OToSpZ9+ROGFmdDGlNp7d1CeSC
ZHRXb21tkpE1yRg9T6/zvy3k0rbvc51n7557yRXJcJh82HxQNrk6GUse3rEe
c4qsTcb7z7XTp18kNyZj2L17i5eWkJuT8TdEvWZdBbk1GWH5Ib6BNWSOBCm7
BkQkvCTrSgBubmJaE1lfgs3eQzfvayUbSyAUiPedbGdJ/Utg8OtGzuVuZAsJ
ps/7fP5uH7KVBHorO954xiXbShD68s+9jyPIkCB2fK323ziyvQSD7Q9+6Dmd
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
SvBsckfJvMg8JSojk4Zv8iM7KsEdxBu2M5DMV8JuWA/z/aFkHyVGBlwedDSK
LFCisY9n/7x4cmRbPu5v4/NiMqPEnWhJ72IpWapE69BOvcqU5HQlPplF9qjc
TM5Q4kJ8bZfHO8gqJRxGTehcn0nOVqJgsqj9m/1s/0p82Fn8r/kw278Sn+d/
+dV6nO1fiRJn01ZOHtu/En4Xbb7o5rP9K/EkHs36hWz/SgzYjPfGGrZ/JSy/
2TRyr7P9K9HjuOlLi5ts/0pc0nx5ZnWX7V+JyROvPLG9z/afCmmT6BEes/2n
IqvTxHv2dWz/qUhLqLvDe8H2n4qFk6JuOjay/afivkfnEv4Htv9UWN6VFvt8
YvtPxcrdfy4KvrP9p2JxgVdB5G+2/1QYTig+zejYUP+pyO6gf1LaicxLRfch
y46ldyU7pmJGluRQhj6Zn4rZYWqVqjfZJxV9d5TvzjYlC1JRYPJ0u3oQOTIV
Fh/qNhUMITOp8DF7oNAMJ0tTEX64SFI6mpyeihWxu0UVNuSMVOic9o+rtiWr
UhE3eUyk1o6cnYqyXg3BjTPJ6lS8WJi+sXkeuSAVtx9Y+rQuImtSIVEXuXOW
kUtT0eP9zLW6q8kVqVgfeWG1vgu5OhUKr6HLjN3I2lQID4oXcdeTG1Mxd+yD
uRb+5OZUPDYznWElILemYqr7sim2YWROGgI/x41HNFk3DYJXmWPsE8j6aYDF
yeG8RLJxGp7dOmPuKCNz07BEc2IAP5VskQZFx119fbaQrdKQcTzKQJBBtk1D
6IFFXSP3kJEG7tteHZkDbP9p2LW5/K/kiM30/wOk4PEl
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw9Wnc81f/3vy1p0hbSpZTS0KaiZyUjCclI6EplRK69ufda18Wlrenmk+rT
Mlraty0VN1HSui0fDaVNJd/7e/w6r/7p8fQ8+7zGeb/fV39lyJLVnTkczpsu
HM7//f///1rmVO85He3Zvs/87x/wZDcvtJWz/y9Wx6yCExs9/hCvCZ0LdxqH
/yY8ENHfw7r5dSJ5LXQ95767kxphXfSp7NhX0o0wF19uROR7MmwAvRdu6VVM
fyT+6BVWv+hMeBSmVk/5J4T5N8KKjvlTdDsIj8W5LuM87Fj84+B7TOdHJsMT
0Etctq+QxWuC1pva/7kwfhKcn+Q82fCT8GRYDYyofviL8BQUdHAvClsJT8XO
wttjtjE8Dbl5ztEH2whPx4dCjTPZzN4MXG8cK01k9kzRkfvFLJDxZlinfzNj
JuNn4nqnK8cWMH4W0mtLFh1j8c+G9GbdnABWD3MELxsefJPVwwKKQSaT7zN7
c/C6p5+DBYsPeN4+tz2GsAAIXtsvl/ud+Lm41NPqP8VX4ufigctTozLCnHn4
OfF54yjKXzAPqZ8SKtV+ED8fkQc7j7tLWDAfDfl9Oq9n8VtitbnlGF+mb4mE
Zk3D6Ux/AbaZTxge9YX4Bdio7eG55xvxVlj17fmtls/EW6HQMaFQ0EK8NVy7
blo0n8VvjXmj1+9qJXmODYL3vfI1aSbeBtMaZredfEe8LSbsdk153ES8LVbN
nj6813/EL8SzcO7n5JfEL8SFbm5zDr0g3g4L78Ucz1ASb4ebx1uaswlzFuHZ
oV6youfEL8LPM0t91J8Rb4/ZOi398p4Qb49m3WFdMglzFqNpaaeq/x4TvxgJ
otY9vg3EO2BVzMWv9+qJd4Dhx2HBCxnviG/3hPO9iYcjQnXtUiwfkrwjrgyu
7XT+/l8sd8SWI22m+iTPcYKmwcjfnx+RvhO2dlUbtIOwwAnf96odPUD25E7o
Zu/fLq8l/SUoW4YVi2pIfwluve1wt64jfRUuCGh8c4/0l+C+2nrxwAek74yX
drG1KykfOON1n9O9W1i9nGEt7PuxL9Vb7gw98Xn77ax+S1FSfvBdGNUPS7F2
9SzvLkx/KU596rOWS1i+FBv370nRJ3mOCypka/aYkX24YNvkpkfFT0nfBdab
Fhu3Epa74N7G/VPMCXNc8fpE6mwD6jdcoaZtm97K/Luif9iQ9RupnnJXFLgd
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
i2H+JvnxLNKPEcO7xbi8iN3/YlzdUtmxmc3/Ylyuzg3OZ/e/GIFpoq8vaB7K
F6Pn+KCEXjRvycTQ36o4ZU33+wExak78O64nm/9U9SxVL15AuFwMu+rwXc7s
/hdjyX3L/afY/S+GLSd5wkX2/C/GCZ83S/RIvl6MffLSY3Xs+U+M9Nx2WT75
bxIjt6t+owF7/hMjK/F7WxXJt6r652Q/bwLJczJxYkXKlE/kXz0Tg58FaH4j
rJmJ0YtPu8wnrJUJcUhGwyC6X7mZiD7+bGs9YaNMLPEOKdpJ+ZpkYvqAZ7LT
7P7PxC7rjG+72fyfiaobUa+fkr5NJjYUzy2bRNgxEzsrBhoZsPk/E/PmvH7I
5n1eJi5Ovx8eSfH5Z6KTqOBbInv/k4ngDg+rd6Qfk4nYmdr3jNnzfyYiS7Wu
TyF9sSrfPq9900g+TyVfk7t+LvH5mWi5PSN5KdVTlol/xxtaOVO9D2Tirc3g
lw5s/svE1+u/HF7R+VyeCen5nA4TWk9yVb0m241op/1akQlLaYH9VuIVmTg6
6sIGOenXZ6K4uL14Mq1XZSZ+Fx5ZWUO4KRNeeZ3WOLDnv0xoPVY2vWTnfybU
0g+XjmfPfxLcb15RGcee/yVYr8xxiWDzvwTjYwZ92ETzrZYEBeGREQ9JnitB
xO2SaTMpXyMJ3ki333QibCKBrdEujxe03kwlmBgb1nya6gkJNNq6jQFhGwkq
H0w3/0b1d5SgedCsqlds/pfAt+hQgjFhngQlARv8ZrL3PxIECySDvInnSxB7
dQrKWP8lSL/h9yiU1o9Agl7Wo76b0vwqlqCPT61lJ5pv8yTY1b7JMpjWS74E
KyPGf9pL8jIJLAa55rD3bwckuDbVdsUPwiUSbHH9uuozyZdL0P3HrhmT2Ptb
CXQMveKGEK5Q8dMElcGEFRIcu/r9+j/0frBegoOpmsI3hJUS9Ny5yyOX7DdJ
0Ki571g65deiqtfDF41vCLdK0LApYNAy2h+cLMz+0Vnblr3/y0L6J9cILuWr
mYVJGc+Pn2D7PwspK6X2ASTPzYJb3zrbYMJGWVDsSPlcz/qfhfWl9q4H2fu/
LDxH7Oc5JI8s9C1XBp2ied4mC/6LfohqqX6OWZjxYqvYi57X3bPw59U2+1p6
H83LQuwmYfcgev/sn4Xa2NoTnej9Mz8Ln2IHpUUSjlHZD/wZGUTvowVZuPjt
xqAC4sVZ0P7ao7mIvY/PQs34HI/3VO/8LESN9nz2lL2fz8KyoRlj0tj73ywM
RPgLM1PqfxaOHD2vxaf4yrMwdmQfA2fSl2fhWqtglCHxFVkQDShdwPwrstDn
W0afqfR+vl6Vr+Lxzy6ElVl4J26/a0bfE5pU9dlYFxs6ifqfhbknnU+Pn0z9
z0Ji46W1zvR+n5ONov8uH4+j7xfq2Vh8RnjpHvselI3qnAuNnen7h1Y2Hvvb
LUig7yfcbGiZCjaz7y1G2WjlJajXsO8l2eg64c82d/oeYpqNwCNRReYUH7IR
UhpfrSDeJhtetuM5F0nfMRuRBxbPzKR43LMR/+wspxdhXjaWdauf5Urx+2eD
t7dghJji42ejeHNqUCvJx2Qjelz48jbyJ8iGr8OHwFHEi7Ox2qWNf5N9j8rG
voFqv7JIPj8beUfG9+hC9mXZkOjLcp0pnwOq+k3r1NmEcImqPtNql1+lepdn
48PkUs8BhOXZeN4r8upUkq/IRphX1Y219H1JkQ2ZwSPXz+S/Phvjxvj8aaZ4
lar8JqZfdSLclI3lzsUxR0i/JRu/+0umTad6tmajvu3rowD6vsbJwc/Hk3Pd
KF/1HJw1Mm3QI3+aOVC/N/VSAeWrlYPXfR+Y6JM9bg4m2diNe0b6Rjl4Me5E
vRHrfw6GTM0f0Zv6Y5qDdXVOJ3sQRg62VneJf8v6n4MjzQ8y11M9HHNwWNE/
S4fWr3sOSkwr+HnE83IQWZlivJ3q6Z+D1rLc0Nckz89BNzff5w9pv8TkQMNr
9OgOkhfk4OSi8E23SV6cg7rmOzUlVM+8HDTVPzvUn+qZn4P7lWO4wwnLVPjV
4NHdKP4DOfCrs/DjEF+Sg+D/Sm4uIb48B1lvZMFLyZ9clf/7fbpHia/IwejK
iwllVG9FDo56Ll4/iezV52DJ7awLvsQrc/CnVGhUT/VsUvWzZ07mSeJbcnDb
4dD0p6TfmgOno7XGp8k/R4qBIsOmIKqnuhQ9uh05/4LsaUrREWwfYkZYS4pp
yspvHnTecKWwPpQ2ZQT7/idFXVnyr2o6n02kmHTu8DIvOg9NpVj1tOR0Lp1v
kOLCIpdZdYRtpDBc7fu8iuw5SlE55OyVbmTPXQrnXeXhBeSfJ4V3ZeKSO9Rf
fymCx3U8TiDMl+KcxtXsU6z/UoS7bfffQfEIVPncq6lLpftFLMXKsUX7p9P9
kCeFB3fg4/WE86VwsE/dcJJ9/5Pi8mRtS/b99oAUwgvLRrsTLlHV9+TWC8Hk
r1yKK1VRp6+z739SzDd9sLOK+AopYoqva1hQvgopTHr53fWletRLETjqHGrY
+S/Fzsn91lwg3CTFkhfvE0NofbdIsevxqY5j7PyXYmK6seAP+/6di+o1I67H
0vpQz8UNAztTN9b/XMw++afVm53/udjwa0nf1ez7eC7+Gzqqb7MB9T8XOz4n
zntAv4cwyUXLpFch++j3EKa5eGcwydyZfg+CXBw+3eJ8jn4PY6PiR2Q3ZQza
b/4/Wi8e3A==
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {}, {}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {}, {}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Var(b) Across 250 runs\"", TraditionalForm], 
     PlotRange -> {{0., 1001.}, {0, 0.00029990263174032585`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Analytic (Real)\"", "\"Numerical (Real)\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8213852056174765`*^9, 3.8213852352166157`*^9}, {
   3.8213853161524553`*^9, 3.8213853424336524`*^9}, 3.8213853749663506`*^9, {
   3.821385430644794*^9, 3.8213854571755323`*^9}, 3.821385556241845*^9, 
   3.821385590414323*^9, 3.8213856435879836`*^9, 3.821456309137703*^9, 
   3.821456379678618*^9, 3.82145641364069*^9, 3.8214564688590617`*^9, {
   3.8214575833633146`*^9, 3.8214576099754515`*^9}, 3.821458302253604*^9, 
   3.8214586803471766`*^9, 3.8214592239712625`*^9, 3.821459393710678*^9, {
   3.821465085335637*^9, 3.8214651043656487`*^9}, 3.821465573410907*^9, 
   3.8214656507515945`*^9, {3.821466197880692*^9, 3.821466221175948*^9}, {
   3.821466349448063*^9, 3.82146635294136*^9}, 3.82146643586512*^9, 
   3.8214669912809596`*^9, 3.8214671195466733`*^9, 3.821467219332733*^9},
 CellLabel->
  "Out[562]=",ExpressionUUID->"07fc7ab2-8837-4c39-951b-c9a5093ed18b"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
4Rk/cPjX0itc4DUu8QZXeIsj3v3f/wGMPonD
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxFWnlcjGvYHpyjyJI9a2PPluyJuOyRZRBKyUQUJdO+1zQ1NVMzlWzZs0RJ
lCXZjiFLtoSQ5TBkqSPKnrWv7/e53s8/flf3c6/X8z73/bzvdF2yes6y+iKR
qKKBSPS////fv+qxIY+OqW+122T95w/Y+/d3TXtTYkPktln6+WF7YmN8fTlt
1K42xK2xVpZS1UtMbAKHtIiuo/sQd0LIWsu8XWbEYvQLb7N7rIC74WhGVoNa
Qb8H1rc6/eJ7N+Je+NexQvb//s3QvdJogXlH4r54aR2lnivE3x8TDhnH1grY
HGcCXjUvE+K1wPWO9qNetSUehI8Pjyxe0IJ4MPbEGn1r3Zp4CI78N3Oyc1Pi
oegVLh4cLuBh2F5kZRbUnHg42j+yPNxKsDcCZ/6L7765JbElbk1PK+5vTDwS
lWEOoh3CeiscGenm9FiwNwqJcXHBV4V4RmP5FuNGk0yIrTEOPe3bCPUYg4jZ
q5cubkU8Fm0+X/0yphkxMFnq9vYbsRx4KHqVMMSQ8nEYa24bWP035eOQ6+Bv
lEMsGo+qqF2vQptQPh4/K7at69eY8gmQtB/QIM+I8glIiDfV1wrxT4TU/KF+
n6A/ERNPGq+dJ+hPwluXYSmV9SmfhCOJh0qXGVA+GYcW11jn1aN8Mka1cnKq
/yv1j3wKqnp3OLroL8qnwK5zn+VruF5kgwGXFowp/fxnvdwGPzZ8TNd/oP5U
3Ju63CjoLeVToRvpWnahgvJp+NF/TZfw55RPw7ycGWU1espt0WDClqSkx5Tb
ovdo245OxKLpcE/ccCn4CeXTsXpCqd2HUspnoCQvPuPMXcpnoPvSBiVbiEUz
kXNan4ESymfiQlnp4K43KZ8Fx/3PCi9do3wWRMcHXlcWUS6Bp3X/w2lX/2BI
sDi19m2L61wvQXvf2+mnLv3BOgmiPnWrtr9C/dk4ubvL77fF1J+NrY3vj+lD
LJ+NpS9kG8bRnm42TK+M7eZznvpzcOZLQW38GerPQbTp1JtBBdSfg/t7si6F
6qg/B76vxFbPGI9oLvb2Vm7wukH9uWhvd+b+HqEec1FRZX6oywPqz0X6oYcr
Lt6hvh2UV896zr5FfTtUqI9M3X6b+nYIufK55iaxzg5Zu5NXXmV+onnQltxv
ZUr7mIfeWUa/7gh8zcOvNekbW92j/jyEFr1t68L4RPMRE/diyjDKMR//ljUY
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
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {}, {}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {}, {}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Cov(b,Conjg(b)) Across 250 runs\"", TraditionalForm], 
     PlotRange -> {{0., 1001.}, {0, 5.847643582722936*^-12}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Analytic (Real)\"", "\"Numerical (Real)\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8213852056174765`*^9, 3.8213852352166157`*^9}, {
   3.8213853161524553`*^9, 3.8213853424336524`*^9}, 3.8213853749663506`*^9, {
   3.821385430644794*^9, 3.8213854571755323`*^9}, 3.821385556241845*^9, 
   3.821385590414323*^9, 3.8213856435879836`*^9, 3.821456309137703*^9, 
   3.821456379678618*^9, 3.82145641364069*^9, 3.8214564688590617`*^9, {
   3.8214575833633146`*^9, 3.8214576099754515`*^9}, 3.821458302253604*^9, 
   3.8214586803471766`*^9, 3.8214592239712625`*^9, 3.821459393710678*^9, {
   3.821465085335637*^9, 3.8214651043656487`*^9}, 3.821465573410907*^9, 
   3.8214656507515945`*^9, {3.821466197880692*^9, 3.821466221175948*^9}, {
   3.821466349448063*^9, 3.82146635294136*^9}, 3.82146643586512*^9, 
   3.8214669912809596`*^9, 3.8214671195466733`*^9, 3.821467219444733*^9},
 CellLabel->
  "Out[563]=",ExpressionUUID->"4f2a2a2c-55aa-4887-a168-864f132fcae3"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
a+C1jS+G04Fw+ZQ/RVoLRxY9HUDr4Mz2jUbSerh4SZvxdCSsLY+YRotwSs8B
8+gY2LnZtIw2wMLzmetoIxw9clkebVLmfb/pW9oMu9/Yf4i2wJppJ0/QqbDh
3OULtARb331wlc6EizLr3KWtsN+fzf+hc5T36R1S+3fmA6fbxIa0HS54EdeC
dijvmzCxHe2Eg5zzwmhZuU/T7O60C5am5/en3bDj/OF4uhT2hJxPoj3K/Zbf
nEJXKHncfpJGe2FTdIOldLXyXnnaNbSwEOe/DP+a9oOLR/XbRWvgamfiQToQ
Dmw2vZDWwlEzlpyndbDRvfEKrYdTQ/fepiNh6/LCx7SozL996RUdA7ui7/lf
Zv5wWZ4QSBvhqpcBbWkT7De6vZ42w0GHukXRFjik2dAYOvW/+34SR0vwAHea
ic5U7h+6KoW2wsnLt6bSOXDK7YMZtA2eGV1kpe1wep4nl3bA0ssqO+2EM0fV
P0DLip0tf6JdipuGnaXdiqf3/Z0uhTPOJ9yiPcr5IVMf0hXKey9b9IL2Kvf7
c339K8wfNvfe3ZQWPq+xySa3pv1g44viUFoDxyTc6UwHwlEHX/ShtbAuoMlQ
WgcHTms3htbDPue6fEpHwt4Ogz+jRbh06bjP6Rj4ePnsLNoA23uu3EgbYetm
Wz5tgi3PCvbTZjjOeOoYbYHDD1w9TafCAU0eldCScp8pvjfpTNh9psUD2qrM
173/jM6BMxb3rlfG/JX3ujHiDdoO63uktKIdyv650ru0U9m3em0ELSvnD9/R
m3bB6fuPDqbdyvs3ujiKLlXun/LnBNoDe1xPZ9AVynlvN5Jor/I+n7dZSVfD
kdcicmhhUY2FqAHbaD/4eI7JQWvgzL9nHqED4eihy1y0Fvbbu6mY1in9/vs9
tB6WzCfv0ZFw1InL1bQIV7V+4HOV+cP2+XUa0wbYdKV5S9oIB0aGtKdNsGut
+CFthtMfxvWkLXDIoIkD6VS4dOe8kbSk7FcvezydCYcn50+jrXCZfHgenQNn
tDy/jLYp56fdXEfbYXfJkzzaAad2bLCHdir3t2oP0zLsvBd+knbBxn79LtJu
uPqbxD/oUthae/pd2qPMH7vkH7pCef8fNtb+g/nDowP3NqSrlfeeWdiCFjKw
/4VL7Wg/OOi9e2G0BnYsF3rQgXDU7YBYWgsX9W4/gtbBo23dxtF6uPz5kKl0
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
4JxBuul0KhyQHpZKS7B1R9R8OhN+7VLfDNoKZ/gMWU7nwC8/GGWlbXDq2PFf
0nbYu3JqLu2APzk8ZwvthMtuL7LTMjy0adYe2gW7euUU0G44yrLlMF0K79m0
W6Y9sPbM9yfV/JU8quUiNX/Yp92Zi2r+8Mxhv5Wq+X9R4xvStT/U/OGhe+6U
q/nD8pXHd9X84ZD6L71q/nBOJ78nav6wb3KTF2r+sGV1UJ0/mT98+Vi7+rQI
R9/TN6Jj4N1vdm1KG+CAj/r8jzbC6TMHt6ZNyv3zRr5Dm+GY8+NCaYty3vPJ
HelUWNMhtTMtwTNHfN6DzoRLMlb2oa1w5P4vY+kcZd9rtiG0DX7aYNcI2g4b
uxxIpB2wc8KP42gn3GzdqYm0DE//+deptAt2P7g6i3Yr792yYi5dCi/p/2gh
7YE9s58vpSvgLt/4ZtFeeO1FzVq6Gr77qsVGWsiqca/Qt220H5yT8H4+rYEr
l3beTQcq3x/ovZ/WKt/fGOikdfDdRsZjtB6O6pZ0XM0fzvo05bSaP+xZ/5lb
zR/Wn5BK1Pxh6dHyMjV/+FyrdTfU/OGggV9XqPnDn6btqFTzh53bv6tS84dr
/3b0qZo/PKC2S7jN/JV93r/oS1uV+40ua0DnwLrlfzahbfD0g95A2q7MK38a
TDtgoUndt2knHN2j0bu0DC9PefMD2qXst6FNBO2GNb+EdqNL4biqiN60B/6y
da9+dAVcOmjAYNoLB6bHD6erYeMO0yhaWIX+kk8/pv3g4jqzJtAauMkHCybT
gfCgMctm0Fp4+Yo1c2gdfNK5aQGth4U/ty+mI+HIN/avoEV4unhkNR0D75x8
cv3t7v8HSzBFmQ==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw9e3lczN37/nhsyZY9hLEnW2TJfiUUQqGkyKRSVEz7XtNM00wzbfZky1qW
hyyRbGPPWjxKkiQie/Zs+fZ7/T7X2z9eV/dZ7us+93Le55zpuXTVXI9/RCLR
q4Yi0f/7////q5kkXV/5eNybZxP/9we86ndo85EXxHoYsDBKNlKQG+B22bRz
c54Rt8eD//6evfmc2BDpI9+0/K+K2AiL5sZ5+FQQixFpsKe4YSlxL3jsyG/X
8AlxH/Sd81m/XBivH5xOvzXpWU1sjJqHnX54vyY2gdf1M0EfBf0G4fiW/nK1
oP8QeF8cc8nsHbEpticWT+tQQzwM30tNrlkK8uGYnCkPy3lFbIbZL07a+74k
HoEbTqbzst8Sj4Stftmhd0L/UbAL+PsyV8CjMT83ZWXPb8Tm6PlwY2WfX8Rj
cPl7+NL2ouf/w2PR8/G4VZ8F+Thc2hD8y6uOeDwKPLdbtP1CPAGNus97NlnQ
ZyJ+V22bXynwn4TzaenylwIG3o7WHZ5Y+T8sA/adqRi5s5xyC9QMa9/V4wHl
FnB/l52Z+h/lk/H610XvYkE+GU3NY/oaFVNuiV1nK5d73qbcEudfOJ5ecpPy
Keh1JC7z+HXKp8C9weEBevmUT8XthV2DUy5SPhVHrllaN71E+TQ0cnH5+5vt
ZdPQ7bLRRjOhvxVmbR77SyyMbwW9deZ97Qopt8bR4482GN+l3BoDvfVFdwX5
dLyL93zWVug/HZ1t7jXbcpXyGQg5lj7a4QblM/D0TUjirGuUz8TWM4/C6i5T
PhN9exl4Phb0s0G3wEFPL92h3AazZjc+tEiYfxY0ScuC4wT7zcKpZIejHe5R
PhuxN/Tm6YT5Z6Pw6cKluwoonwP1jNdrFpZRPgdl2ZbzXgjxZwubshd1f7ne
sMWbrft9utJ/ZLa49U229Mqn/2GdLbLttlxZL8SLHdq9Pvpt+1f2t8Nviefn
K+/Z3w5nOmhKGrO9zg4eVqsyrwr95+Koh8HooR/Yfy72Dws+1pLxJpuLLTtb
B4fSX3Vzce3wZKMIwb/nIfHu2yvhwvzz8Cf15cOKWvafh6xP+lfWMD508/BD
duWYjRB/89HkhcZ1mNB/PvTdymRJP9h/PtrVXR5jIeg/H+quQ9eeZHuRPdo3
97CczfFgj89OF74f/M7+9vC8OeujmHKdPX60eBr0SohfBzhvOmZdIPR3wNt2
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
28pRrrWsv4b17WeHWq2j/mIl7vyIevSK8WusxITH0tB5bG+qRPPTTaQtOL65
EmavHNQLeR4PJSYqB+ZE8bzSWonB/wy4vJ/nkbZKHGlS3G4ysaMSBfdTPz6l
/hIlWua+MD/M810vJf5r8qx/Fc9/pEo4tLwc9Jr3t6FKdEkZNj1OOH9VYmtp
ZsYtngepldi0+tSzk5SnKuEfmD3yGfunKbHl6ooJGuG9gxK6y8ZuO3henaWE
qJVB1SDibCX69juwfwD75yqxwWDEf8+E+yslLv2V5aezfb4SR0dVL9cK5/lK
JHyvmaDP878SJX48k7v6CPepSliWv4sQ7k+rlfiwoKP0Pc/ba5TYPbDX2ZXE
tUrYdrJOayyc/8fji4HMWrjv1YuHZegoUS31M4jHq8M9HcdQP8N4vLu+8mcm
9RHHY+aAX4cmsr1xPG6ol+cMJjaNh6yizq01zwvN43FPdiftX64X4qF5llHy
ieNZx2P+9vQmm2kv23hMW6QMeUf9HOPhcNE1xZz2kcSjKvDE3lO8P/CKR8Cm
dWNDeb8tjYe+a+dpDYlD43Ghw0qfw7SXrH7+r2GThlOujkcbbeAIqXAfEY8G
E08vrCVOi0dM2bwhEbwvyYiHtdOI6gTej2bFw0py4HI3yrPr9cn+FejN9w+5
8Xg8Uvb2Mdvr4iHXHp4p5n1Lfjy2zm53s4T3/4XxOLtragPhfUBJPLoeCo0Z
IrwniEfzZdKYo7RfdTzCFH/bJPG8tCYeCa1vWx/l+WttPNbvr767inKRCm2r
Tn/353h6KsyTr03+wfNSAxVaV/ilNKbcsF7+/FaeLd/TiFXIT6szLyE2VqFO
bRPjLpwXq9Bq5pqewvm4uQpPInqHNeZ9JVSwuqE/ox/zgbUKPe4VfU4htlUh
Y+S2i//wvsJRhYZzbVY1pFyiwtI7Eas7C/GvQuchbfq2pj5SFTaLb3aKov1C
Vfh9pcohVXjPq8KaLY4lRfQ3tQohKvv+hoyvVBUuWNT4PaL/pdXrd2Xf047k
k6GqX7/Y1b9o3ywVvpy/9O4G+WeroBpTfV9Je+eqcPHhtw42wvm1Cn0vbDue
Rnm+Cr19Hphu5HiFKrxs8OXlOOpXosJV59yO5cL5vgrOA6sH/2X7ahWc/sR4
pTM+alT4mLl2uzB+rQr/3crs6iqsvxqZr88OH0r/0VPj6Pw/tj85n4Eahg57
VWa8TzdUo0c7ndlJvgcTq7Ho65Jn69neWA3V/ezKObSfqRrF8pK0PrSfuRrl
R/Oa9hXel6mREyga6MT21mp8tnLzU/G+wlaNGUVvmnsw/ziq8e33otEdKZeo
4d9iR+sWxF5qWGrbm77m/YFUjUGdLO6dIg5VY+mEjd1KhfsXNdZNLdUt53qp
1egW+Wi8sL6pagy3qL4dwvuwNDX2RU70msH73ww13q79s+8+z+ez6vuPzy3d
RHm2GnNvjooM5H41V42CacUfPvK8W6eGwUTXLueJ89XY43Ltg6Xw/V9vH5f7
xzdzP1GiRv+si83DhfNdNS7tK3eZLXz/qbHrQKPsYOG8V42NLd0KP3E/XKtG
aMoKT31iUQJcv9ivc+b3vV4CDMb0nPaT9wkGCZisvdTBlPwME2D3t3DXZuF9
QAK2bzp025f12DgBawdD7iTU/wQkNvatasn9hHkC+pVVPe3C/kjADov/rscy
vq0TMPxG0MNrvI+1TYBeysAprxjfjgl40HrGguW8r5Ik4FDTwsxAxrtXAoxG
ZvU3EuI/Aa8+NvjkxP6hCehm175BF66nLAEbd/642pjjqRPwPsIqKF64j0pA
eNeO6s7EaQlQhn0Zs5jjZyTAqkXMxTTirHp5D4eIydxPZCdgw/G6ezvZPzcB
VzQ2K4X7fF0CHle8K1/P/Up+Aso3NxC9YnwWJmD8u+7tD9N/SxIwG99yrIT6
n4De22f2y+J9WnUCep3MWDKR8ViTAO0Ik7dOjJ/aBEhMmwc+EeJfgxzb7snB
Qv3XIKCx6d65vJ830KDkTXuLaMa7oQaHsh6GHOD8Yg2MWrhdGU1srIHet+qs
YaynphpsutB8wXXWP3MN/E1KPzkL74c0OKO5lxzB9wXWGsRYr0j/xfpoq4G2
rHFEMeWOGvRvGh6cx/4SDb5Lj40W6q+XBk5tFr0dQblUgwttqlJXsX+oBl9P
LnFO4vttmQZL1hj1Hsb3C2oNFhy+b1FEfVM12CP/YGTE9xNpmvrvvV6pOcxf
GRqEmIzJPEv7ZWlQnF+szmf9ztYguH2rb6V8f5Rbb8/DHauL+F5Rp8Gorh9g
w/nyNXB8/ejCG77nKtTg/YB9pweTX4kGvspWwbeE95QadB7fwngQ+VZrsOaE
Xc4Cvmer0eCXueviPL6Hr9Wgt/8lYz/h90Ja7D9/3+AfYj0t3EpN387jezQD
LaaaXjBazPdqhloc1ykmdubvBcRa+P0dcqATsbEW3yanm3zlezlTLV5GnLNP
5+8xzLUo+tXl9t+fXH8tMtM3fDzxh+uvxfSCD2tLiW3rx/tr+XQH2ztqEV2e
a3KDWKLFlW3Dvm/mfF5aDDX/3sCF/KVaWNwOtVFy/lAtprX8uXiH8PsQLVQ3
TMI9idVanDQoiOtJe6RqsedngpUPf9+QpsXrhvZLHvH3IRlaDFp89+n3v1z/
ejzbtXtUg//9fitbi1NH9+s14e+5crXYUTX3YzrtpdNizYuxpy24Pvla5M+M
tBN+b1KoheS1uMtkvkcs0UJd7bp7Cd87Vmhx5vCYWVPo39VaDJYdmT+OuEaL
p19uthYT12ox4su653r8fYUoEcWagZ0u8L2iXiLsFp8f4cb3igaJeH1rzBgz
YsNEDEs0tYvle0dxIhJ8/bWJ7G+ciPW/Pi2Npr1ME6HXqNO8cZzPPBGuPcbm
WHF9kIi0tZVrHcjPOhGVTqI/n/le0zYRb/Kcn4nJ1zERxw7v0w3n/JJE3E6T
o5L9vRLRa8+X/BbsL03EqfNvTxfRf0MTMSEp7lkZ28sS8b53StMefE+pTsTb
noN9S4hTE/Fhm2a/CeMrLRFtnvZ0myK8N01Ek5E50Q3JPysRG143mNyI/bMT
YZ1cfW0L9c1NRL+agpdFlOvqsdXGv1aU5yfij7LbMAvauzARIXfLPCOF9U/E
nBHV71XkU5GIsJCcnOaM1+p6/u8SKroxfmoSsfFq+02X2L82EUM33FBfF35/
k4QeQXv3/UM+ekl4/FLWYQT5GCRhfkWj0Tnsb1gvP9OuuiuxOAkDFvjNz2A+
NU5C208VIwbTXqZJCMqIT2pN/zNPwqfYlcd28n0pktDiYb63O/OddRI0bRfF
jeD3k20SijoWp7Xn96pjEp75/NWk8D2rJAmXvv68MpvtvZJg5bPV9D3nkybh
i4VeUR7tG5qEZktNxcJ7V1kSXP5u25bC72N1ErpWvd2dJXz/JeFG2fpgZ+bz
tCQM7NQw7j3rW0YSYtrkNH3JepCVhE7v1n42Js5OQqHE+XME++cmwVrWU3eX
+21dvf32VFUYcT+an4TR4qkPh/H7pDAJGzemGJlxvJIklDdM0v8p/J4mCZmH
axwm0T7VSWh0qU3sZ9qjJgl/fntVB7Le1CbBzN1zahDtJ0pGSp152VbWE71k
TL5bM30cxzNIxro+f9Nvs71hMgbW7Q5/T7k4GV5fD9bcob2Mk6FVl6l1tKdp
MoYVWD2ayf7myfCfsLvhBeH3PclYfKvAUM7vX+tkmPRo8J8zv89t6+VLrcx9
2d8xGRZ/8vs0Fd6DJ2OjfiM74fcJXsnIf3cixpT+K02Gnbh/lB/zQWgyLro+
jRwu/D4tGU+6/TtCeC+uTkbQMRP93sxXqclo9qhXxF/mq7R6PHLk97b0/4xk
hOR38nhBeVYyZqTsO2AixH8yvK8X6L/jeLnJuDbL6nFv4fd4yfixXxK2g/Ge
n4yfhfP/6IT4T0afphbrXxKXJGMSgid6sn9FvXyvlXIm+VbX6xfcXBxEe9Qk
o5FXz8LG3D/U1tsrwne8n/D7zxTcPbDr0Ci+19RLgX3K/t2DiA1SUHn2ybCb
xIYpmDl6T8gKYnEKjge1LHnMeDNOwbTSgOMewvqnYHfwob2ZbG+eguvFu29V
Ceufgha31G6/ud7WKRix1r7bwPp88H8W65ha
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {}, {}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {}, {}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Mean \[Gamma] Across 250 Runs\"", TraditionalForm], 
     PlotRange -> {{0, 1001.}, {0, 0.000011249957812653477`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Analytic\"", "\"Numerical\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8213852056174765`*^9, 3.8213852352166157`*^9}, {
   3.8213853161524553`*^9, 3.8213853424336524`*^9}, 3.8213853749663506`*^9, {
   3.821385430644794*^9, 3.8213854571755323`*^9}, 3.821385556241845*^9, 
   3.821385590414323*^9, 3.8213856435879836`*^9, 3.821456309137703*^9, 
   3.821456379678618*^9, 3.82145641364069*^9, 3.8214564688590617`*^9, {
   3.8214575833633146`*^9, 3.8214576099754515`*^9}, 3.821458302253604*^9, 
   3.8214586803471766`*^9, 3.8214592239712625`*^9, 3.821459393710678*^9, {
   3.821465085335637*^9, 3.8214651043656487`*^9}, 3.821465573410907*^9, 
   3.8214656507515945`*^9, {3.821466197880692*^9, 3.821466221175948*^9}, {
   3.821466349448063*^9, 3.82146635294136*^9}, 3.82146643586512*^9, 
   3.8214669912809596`*^9, 3.8214671195466733`*^9, 3.821467219559733*^9},
 CellLabel->
  "Out[564]=",ExpressionUUID->"aa0098bb-a736-4083-be1d-c4bbc1d6c46f"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV13lYzOv7B/APkuxj62QfxElE9oQ8WZPKaBmJNFJkrVQkYkJahGzJ3rHW
GRLHElkma7Jlz5LGnu00OVT239v1fX/++J1/zvW63vf93J9n7mlmtPEPdg+s
KknSm2qS9Pv///vPOFD6//8JSQopedb7rcP/aCZ0f3d5+az3V1oB/2VlnVGN
fY3hR0XPeteiLYSkPZHn6q+gWyB3a2Od0YhWwlHzTI3mdFuh9rpX8Kx3M9oS
/V86nIluSXcQkvA57eqvpK2Qby7Jqd6WtsZ56Q2tM9rRnYV6fdP+qS7t6S5C
N00daGrsQNvifhUrwtda0d1w3qSjz3pb092FpO/xRPWwE91DqO9urn4m2obu
Cd/obNOmK91L6PL/yXD1t6V7Y/6VkyY9u9F9cL/LN3Kqd6fthPpz5LPZ92X3
xfxPnzpm9KDtkfer8TSqJ90P/aOaprr0ovsLKa1Lp1GtetMDhGT4r7+pUbYD
7jfd7VRuH3qg0NXK9Atfa0cL5KdCOgX2/Z+1sGFDzLPe9swd8Xo6rNlo1o+5
o5A0B3eoHtLSIDzf3UM19vVnPgjPbzh7OnoA88HIj96KGOXAHPYa+6xzm4HM
h+D5L5U9/0hrhwjdW63W1V8wH4r+8hodr9DaoUL31W+VSU9H5sOQZ5obttDa
YXj+e1tzqg9iPlyoL5RZbphFa4dj3kfd7Pty7oT3w9XubmIwcych2W483jGD
lkYI9UsHUb3hEObw+vsXDVG05CzUvUa4nnwu585CKth/e4PLUOYjhc7n3diw
I7R2JJ6vucGt1TDmLng92k+2jqO1Lni/NX5f3SjnrkLdviL0qfdw5q5CF3Wo
4mQuLbnhfh7RqdZOzOHqj6qGr6WlUfh78Yof9V3OR+G+6XU7BY5grhK6xKdr
TK/TQoXXR7J41tuZ9cj/rr711HZa/9vGNhvNRrJ/NOpz94SH0mI0zovspHpI
a+FpTbI6DXZhP+pFas8a+2jJHe/HKsefNXZlP5w/asDpaFrrjvfT0tyNr2g9
cuvtQyNGubHfA/XbL6uyaeGB9+cy185tRrHfA/sberNGIq2HAys9n3+kJU+h
nuk0o9hGxX5PodtRo4urP631FJLqn9ITKbQeeZT3QasrtOQl1C3fzk75JffD
AyJ6mvQczX4vIXn/9zk0iNZ74f3te6x4Cy2p8X7OjXS9SQt4cUP7nOru7FcL
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
viNtpsW/Jwe7P+5NK+AtrU5VDKYtUN+q/M9Go2klck3+mi4TaCvk0tYfI6bT
tlq8n6cFBUbSdsj797qtjaUFHPl9wJY1tBPqw/Tpx7bTKuSdYxrd3kd7w7sc
Fv57nNag/lFlSc1LdBCexzbTo/0dOgR+MfG0eEpHol/dsOP4f2kt8vgza+d+
o+PhyKk/15jN5z7gZfWmZjahUzHvv4O3L7el0+DW7g4vu9LpqK9Vmi4NoLMw
r2FcoxbOdDYc1XJhnzG0/vfrdaDEPYDOQ/8rB49ZoXQBnHjlVMJCuhB28bDa
vZw2YP7MB2v0qXQJztvn8+PRbtoI/104peIQXYl+M69bDfW0FCPUS67273KN
NovB98WgvSMe0ooYvF7/NAh8TVsgr9dmgfYTrURuueLV5ioLuH+cN/aT6lg9
2ha5i3fOrea0Hfwzu/2/VrRAfbB5cs3etBM8cPZXy8G0Cra5HCBUtDfmP2xx
Y5wvrUE+dGbfudPooN/nndi5Zi4dgnpvk3qZS+lI5L+cIy+vprVw4MpnL7bR
8ahPvO4i7aOTkc+sfaz5cToVrj+0TZ+LdBp8Y95y99t0Ou73777PMw10Fnz1
sV/CBzob9VNr5u/6SuuRn+/eU18jmvvHfIcx2x41pguQm0eZVbShC5Fnbpzd
sCttwHmTDj+26U+XII+8NmzECNqI/r+fZgWo6Uq4/6dm2km0tBjfz9ViN4fQ
ZouF9L1u6dFoWoG8Y5OxtxJpC+RHm537sIFWLhY6TXObmrtpK3hasw2Wh2hb
eE3jKuIMbYfz5tWePu4qLeAz0t05D2gnuF2Zw5pXtArzhj1J3/8f7Q3nXW54
WVrI/cNBWQte1KWDMO/i2le/mtEhyF+EqZpb0ZGwXnWidy9ai3ofa0v3QXQ8
7Fl15cxRdDI8425F/Hg6Fc83ePfEXVPpNOSFoVfOzKHT4c79ej1aQmehfmCV
7eXJdDbmh5w1a7iN1sPS4tk2OjoP/W4Oj52y6QLk4yuGBlygC2Gr/QcW3aIN
qD/k13RzMV2CeePqLjn6njbCk46/v/mFrkS/tb/6g+ki7n+JUB+ooTdrTJst
ETr39I6WbWgFcq/hawd2oS2WCGnO0+8+/WglXD5v8hwn2gr9PesXrPaibdG/
envf/f60HezaZWdeMC3gP7PrvFhAO+E8vcOcXwm0Cs4+V9xsA+0NXx88ovcu
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
QisShbRpw/iWHrQF8mqf6uvG0krkV93O2WloK5zXbu+ci5NpW+S6nx09Z9J2
6M/1KHoaRgu4RnpycBTtBD/+MviHllah/6lzRWIc7Y3zwzf+bbGS1iC3e+27
Zx0dhP7E7g16bqZDkPdfcD73LzoSecsLc0el01qct6J2p6JMOh65r+rJtCN0
Mpy0dnVlDp2K897dHbLsLJ2G/sImlY0u0+lwe0/dXzfoLNTfSp7Q9Z68f+RF
VxqceizvH3aqfsH5ubx/1DcaEFn4Rt4/8v5hnSYb5f3DF/Y++a9c3j/qMx+u
jvkh7x/559pD65ss4/7hLf0qt9SiK1G/c6rOugEtLRc6s5QJ2X/QZvA1fYNh
rWjFciF9fHP+tiVtgTyiQeTETrRyOb7ve3cq7UZbIc/3ebLAjrZFPiN6da2B
tB3O27p1SOpQWiD/cbKivQvthPzUw7//cadVOK92ua/jWNobeaKiwQ0/WoP+
DVbnx0+mg+A7A+e+nUGHwGme1pFhdCT6twQVVY+itTi/Q1TyWi0dj/xp4uA2
cXQy+q03lmeuoFPhnXsy+q+j02DdwfH5m+h0nNcwp773X3QWnHHu7Mu9dDZ8
43JEWCatxzyv61ZVjtB5yPvefLQyhy6Ao2+tbHGWLsS8sluOf+fRBvR/KvjU
5wZdAquv7b1wV94/6v/I8/F4LO8fuV1u3afP5P0n4fsxWz/rjbz/JLyemWHf
S+X9I7+3o0Niubx/OHz9gz9+yPtHfeiypN3V4rh/5NcjBvaoRdvCiZM+6hW0
HXzXbbfbH7RIwr/X+3o/bkk7wR3b1p5mSatQP6nm6Qpr2hvzOv0bEtuN1sDt
brVrZEcHoT/q8L00BzoE/RPXJXQZSkfCc8P6nxxJa9H/XlU6wp2OR7+x0477
3nQybGnqFehHp8Kvi2r8F0inof/h4RPaGXQ6zh+fMLNeGJ2FvK6vcss8Ohv9
rl1ud9TSevjUz9hjy+g8+ORVu6Er6AKc13zju1tr6ULkhZO2aTbRBuQXbUb/
m0aXYN6gz9UW7KWNyFvlHK2ZSVfCYxdN3XCYllYI3blBLdrn0GYrhPpUtRuH
cmkFbH4uRuTRFqi/ru15/TqtRP6q/+txd+X9w74VG988kveP+h5ZLnOfyftH
PnXKL5M38v7hny0OrSmV94/6jwUBynJ5/8iHLfkj87u8f/hLj/x+1eK5f9TX
fr7gck06aIWQ9q/qOkZBh8AL+z17YU5Hoj/z5brZLWktcoeVwyVLOh7nje/5
dYU1nYxc92Bf8250KnLvaL+MPnQazlvfqmEfBzodeZUz588PobOQX/Od6z6S
zsZ5Vl87GkbTeuSH1j+e6U3nof9Kl1XfJtAFcONLjgmBdCH8fvwn8xm0Af2f
yvbsmk2X4PzlS8d2n0cb4ZgmdfSL6Er079l92nUZLa0U6nE9Qh8l0WZw8Jl2
U9fSipVC+sf5XvlG2mKl0MXejl+aRivhYz79Gu6lrVA/wvBh+37aFnnfgDSb
w7Qdcp/X7jknaIF5NYOqj8ilnZBbvD527xKtgpcFTAu4Tnuj3sPQ4uMdef/I
tT43Fj2S9w/XuR1T95m8f9RXjOi5uUTeP/JBZ15Zlcr7h99333j0s7x/uP2u
kUO+y/vH869o/PNm1QTuH/ZakuVXk05DfbTR/0N9Oh15tfFN5pvTWZjf9MIl
s5Z0NvIJNlEp7Wg98mrrOlta03k4r0/lk4O2dAHyTeNWD+xDFyL3PTX42gDa
gPMyW5T7DKFLkNvOTy9xpo3oF/d95oymK2Ft97om3rS0SqhHLT+zegJttkpI
bs9DWwfSilVC98jOcv902gLOS7pnP5tWov9lcXxeJG2F/tW2/dSLaFt4y6IP
z2NpO/Tfu7Y9NIkW6E9r6v5rDe0EX55ksmJjwsD/A3PxKXM=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw9e3lczN/3/yBkbeyhGCplq0HI/qQkhMgSUtO+a9r3mqmpZppmSrYQxp4t
2dL7bZskpSwRyZ4lirxbhGwf3/k9fs71j8ezc+/Zz7nL3NcI18AVHh05HE5D
Jw7n//3///81z4kc+8bvsmGH2X//gA2jwtv6jyCsjUsRk2vGMszF25039Dsy
3B8nXWbrN48krItL4iITMcN66LXv371NbDwPl2Q7DfqMIjwSnHMxjqNNCBvi
YsnS+2uYPqOw2NKsbhPDJnD57hhQYkx4DJK39RkTN5rwOJR3N+wXOoawKfxn
rX6ZP54wH0++7TVJY/QJeG3sf1+P4YnY+XntswrGbxK+STlOT9l8cxycviA5
dCLhybgwfr08YxLhKXi2MrPClE94KiwduX23TyBsgUNT0DaezZ+GHN6sh0/G
EZ6OqXqvLs9n8mZAZ0XcLi9TwjOhnd4W12Ey4Vkw3P14iccUwrPxZNSPMUFm
hOdgovnYytixhIH4poWNeWSfCDhvPkSPy+IxF62FByYbGhB9Lq7t50p9hhF9
Hj45tc9yoviK5qHq2daR+4yIbomnLsMePSZ7RJYokdz7cY7ZZ4VlB7IWScke
kRUmLA2qSiF5nPnoF9DrxBrSRzQfPyYaPKtk+WGNTyEjsleTPSJrNJxdv12f
8V8Aq0OjjWuY/AWQd/R4E8f8YYOI2dlPz5J/RTawEejtHsXitRD9VWMnc8ke
0ULoTLv2I5rptwgNVUYN5ymfRYvgaX63bD6jL8bapBMNXwYTfTHqRw5++laX
6LZYkW926/JQotti7H9fG6WsPpbAUXlubxLz/xKMWqbFE7B6Wgr+/MhvOVQP
oqW4/lSSeo/NX4Z1s33e6jD/LYPlmklF9Tyi26FD/MHZr4f/xbDD2s2K6mbC
Iju823vscB3Zr7aDxeh/Boxk/l+OPvN0Lq0i/2M5jJ1H9vRl+bQcRqO/hPHI
/+rleBoTYsTGc1YgxqFOz4nNX4EH3ySGy1g+rEAP56Mv+lK9qFfgXtuFlm6s
HuzRW2eWTzvFC/bIH6h1aDjVn8get3WOmpua03x7bOm+cd8dVm8rsbpLcc57
Nn8lxIsf+FVQfohWYsCP3lHzCKtXYm/E1TPXWL9Zhfb+Me+8yD6swtHvvQf8
YPm0CubTLB2E5A/1Kvzidcq8yPRfDYt+vrMPE8ZqGNbLBWomfzV0on4kvyd/
qFdjaJ2usw7L7zUwXd5V/zfFB2uwmSssc2P+X4Nfblo4Q/qq1+DimQ3CGtbf
HDDsbYnnHqa/A5w7nCioYfo7IPl1xlwZ+UftgE1TC/JymP/WokRP8c2G6b8W
VnxOzzuUH6K1sPM22LqV8k+9FkqP8p88lj/r0DvQ3sCP8hvrYGjnnHOY+oto
He4skOR/pnpRr8OT152rP7D+sx4JcS3lD1n+rsfSDY9LJ+rR/PXwGla0ZTrV
i3o9vHfavjzO5jvC3yO4+J+BNN8Rfa5VTv0wiOY74r9XrxuNhtB8R2xpeZz5
kuqVswGSF4nFY6mesAEHjq76U8jqfQNcPYOtLpI+6g04dKhaVMTqzwnTDD7f
78H0d8KbnBDuR9YPnHBZe0+JBWG1E7Z59r6+hs13Rnlpjv0fsgfOeOk2r82P
+c8ZM/a0XPlC49XOeNZ4wmEMmy/AKaOT3DUknydARe7Al0bkLwgQs+06/z3R
BQIU3n5aas/6kUCz3i0qSNX/i1UCiCUbBt1j+goQmoEbH4lfrQAHO9g8NmX9
ywU1f7bnH6T+xXNBk3FeVU/WD1wwpuu6s78ofwUu+Mdsy8Vs1s9ccD1hJP8A
5ZPKBauedG1NYf3GBWsPXdliQ/VU66JZn6wq5rD8d4X544DaMOLPc8WGkz17
fiQMV6yXK9c00HyBKxL0ikp3sfp0xVfOqsBSqg+VK56ph7XKWb26Iidb0LcL
0Wtdsesj79VdVv9ucMrtYX6K6pXnhhjv0jGhZB/ckHTltdCG7BO4wbJ2UMl3
5n83nPAfPPsu6atyQ5b7Pypn8qfaDX8ubPRh9VXrhuq9othi5n93eHYMLx5C
mOeOs26Sjm00H+6Y+caxWEn6CNxxfZLy0zryn8gd+RvvluyneKncMbhoWXEZ
YbU7Ng0eU/eT5te6Y1D85OOsv3A8sNWNv/gUjed5wHTH2n0byR/wQOG2EWP8
SJ7AA7OenHhWwfqTBwLObmheweR7wJizdOpo1q880MtoyoyuLP4eyG2bNl3C
1n9PeDda2TXSeJ4ntq7Xlf0gOjxxwdQksxOLvyeq9SY29qH1ROSJ2brbdISE
VZ4Q2ShW+NN+TO2J4TF20U60H6v1xLaFgSW200i+F7xcDt03p/WK5wXJySyn
LTQfXsiNGPXbZzrJ90Jq+dHNFRYk3wutz5y/P2H55wVvp0Mf48g/ai+UN13d
HUT+rPXCwKQOR5rYftYbk20KDk6m/OB5I19sEf6H6hfe8L1hauBI/UzgDe28
8f2Gsf7mjW5P9yzzpP6g8oZ58tLPP6n/qL0hvj6woYjG13rjV7tXbSz1W44P
yvyGKA9SP+L5YFQXvSBv6ifwweCYMF990k/gg/3B23eUsv7mg9vXV4w/Q/qq
fPCtYfV0T5Kn9sHuAYXrE4le64OCDVNe/mD92xfzxCZP7pA8ni+GD02zi6J+
DV8sLWjvx9YLgS9uhaUEf2LyfeFR1Hn4IqoflS82nxGulJC+al+I6ss6XKP1
udYX9iXm00PIXxw/CLnTPRxY//VDaZcFoyYy//tB63t071kDSL4fzncpiK4l
/4n8cPvWkKWn+pB8P3Tsf+WWTU+Sr8Gj9gTxu5N8P+xc2v3Uxm4k3x83o7NM
zYjO88ewr5bcUC2S7495J9vmTelK8v1hOXndsvtdSL4/3k/q9TqL6Cp/TDiz
u69ZB5Lvjz9PjFyv/eH8le8Pn379Vq0nzAnAr+nuS24R5gVg78NZj2P+9xcj
AGfun/ro1JnkB2CdzQv9qSRPFIDqAecbGFYF4OBs7wPnabw6AA//c981k/jV
BuC1re+wi4Q5GzFea3ZGxG+SvxGHl/Z9rvhF8jcCDpxbi3/8xYKNEBnNLQ8h
umgj3AyCFnC//cUqzfxhN4o/tf/F6o2YFjX08fsWkr8R2xy/nX1E/DiBeIW2
vH1MfiBmcVpbRxEdgXhg9HC5C/ETBGJOo/HGiW0kPxC7niw7s5roqkA8yZ+z
4ADppw7EgpsTzYf8JPmBiJz2kvee4ssR4uyuZXN/kr+4Quw9GjTyM2GeEGsW
XDtZQPnCF6KHcPL2Gz0oP4RY3PJKO6T3X2wnxPbPO1xG9qJ4CTFm6LtFShov
FOJu9HKlL/EXCfG5NjXjBOmTqcGbSh9fIawSYnXW+/1dOX9xvhB79No/lDP7
hPB0zjq6r9NfeqUQ4viBawxofK1G3q/RN1yI3izEpjMdJuxh9gehZ0WCBbcj
2R+E8OVLc9JpPC8I/7bf+mpNmB+E3Ree582j/EcQtI5VtPYgbBcEmWnMgHfa
ZH8QpN+a7HqRP4RB6M37ffa4DtkfhLD19i1RVK+ZQThsePTiEpbPQbhn5RXY
TvmaH4SoA7pcJemrDoI69IvCi+q3MgiSnSY/e9L8Wo3+jye8W0u4WSN/eYe6
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
5Tdczd6LSaGtvFu5gt67mEghemTdQ48wXwofg83Vg2i8hRTGBqtzstn7PikO
B54ePoz8ZSNFPv9FroziZSeFVlX5/i7kXwcp5i1O3nWCsEAKg+nlS1ZRvL2l
kBqv1U4kfkIpbISH5n0h/0ZKkfG1TbeBvQeXwvXLol1D6L2eVIoD913GmZH/
M6XofWPq3ljyb7YUUe8qv2iT/1VSVJY+yV1C83OlmNK24dFo0idfitXDwsb2
JlwoxaqrZ9qfUnzUUkzTFk7oTfVVJoX45Wppf4pXpRSBd3fcW0HvuWukCP3s
fV3A3vNJcfDc3lJveq9XL9XsD7uXc4hfsxQzhr3s50zy2jXxvFjOe8ve98vw
yOlDySVW/zK8NQ57dpcwV4YndcbtWaS/rgz2gX23H5tK8ZfhmCUneCDVg4kM
URNDmvXp/Rpfhpn2uw2Lab6FDPnXdSv6sPd1MlS8aDKdTnQbGWbJTm5n77nt
ZAg693i7J9W3gwzX3CLzF1M/EMjQ69WyiPmg+Mvwr7Rer3guxV+GFT+GXY8g
HClD5P+mpkqsKf4y6Lk1G+kQlspgYZmW3mRJ8Zch5KvDBEuiZ8tw+1brPzLC
Khk2LT4TNH8hxV+Gon2WK0ZaUfxlaA/Qr8hfTPGXwfPntmsmthR/GT5cnlY8
bwnFXwbvlNGPUxdR/GWYUGn3Z/4yir8MxZfWVPdfSvGX4d2u3FN/CNfLYPKp
ckkz4WYZhPbDfXcQv3YZ6lcPSR9H9nHScObFDelK6m/aaSi90crbTpibhlbB
aG8uYd00RNw76f4PYV4aXHp1fjSAsEkabFrvPn9C8eGnYdj1My9mUz1bpGFp
3dY+24mONAz40pA2mPLHJg3OO/lGA6i+7dLQOHB534Gs/6fh+9ltqwxY/adh
6s6uFx0pX7zTkH7q68xbrP7TULM0feB+ysfINHgYXTmjz95PpmHOj5GJh2i8
NA1VyS89olj9a/Tnz1vizeo/DTvWNHa2Ze9N06BjfNRiKvWD3DT4iHfzSml+
fhp8A+N011O/KdTop5+c6cnqP02TX9ZJV6neytJg/3vL2B8krzIN9Y1+fAXx
r0nDFMeFBc9pfm0aOo7hclZTf6hPg8ns9Lem1D+a0xD3tT6pE+nbnoa794q1
2tj3A3IY16oEbL3SlmOE9Xejr4S5ctQabAq/Q/7WlePAohnml6leeXJsLEq8
n07rpYkc0/98L9tE/YEvx81ZuiVBbP2XY2J7pwYu5QPkGNh78I6ubP2X49vP
G/7WrP7l6NLeaelm0sdBjiczp+lPZe9x5QjsljehE9njLYfziHFbqqm/CeWI
CR7VZT/150g5euzdHryOfS8kx3nBNr3pNF4qR05HravsvWamHHl2Mw810PqX
LcejgvG1j6n/qjT8B+atyKP3o7lyTKs+OGYm+71GjpbPViPY9wCFcmQcHpQ5
hv1+o/H/oU/ycPo9pkyO9SXBktmEK+UwLL7fakG4Ro6sVv+NhwjXynHCuqLL
Etp/1sshFHUb58l+75HD5YDBqgOE2+XwaWnLZedXTjo8cjwzcmj/qJ0OT7Or
h83IHm46jjgFZT2i/YJuOh6eXmX+lvjx0nHMPHeKiPajJhp8PkhXi/1elo4N
buFhBf0p/umoNPL08SI60rH+T152Iulvk47Cu7cO+ZA+duk4u6Hbf/PZ/X86
ArZNjnvB3sOmo5Fj/V8PLsU/HRfNlYVd2O9t6bBuuLE5gHBkOnb0kF4+R/NF
6YgMKc1MZ+f/dDgP9X4ZT/vzzHRUrdQNCqbvP7LT4b7Srl9X9vtcOiZal8y7
TvNz09F+rPv7epqfnw6f0F7+IwgXpsNIeuqNNfueJB2l00d3mk3vjcvSUVd+
jFtO/q9Mx2Z+YHsy4Zp0XB4SGjKA5tem43V1+D4u8a9Px9fbqOtL+jWnI/pP
ursf3X+0p6Ogm90iK7qv4CiwZcqdGDPyn7YCXv+rct/Lfg9UYNG6M9tnk/90
FXjzzUrrKsWTp8CSq1NFpsTPRAG9jBdHUokfX4HLg+bme5B8CwXQuUW9gehQ
YF9twflm0t9GgYf8gzt02e+pCpj8rqtaTvFyUEDsrXZyIPsECqwI6aG/kfzv
rcDr6T4OWcRPqIDiWiO3iOolUoHeOTUDp7DvexRIuO9uu5XGSxVIVed3387u
fxS4t3ri+RbC2QoUZ232S6PxKgXcY9PazlA8chUo+fg/29WkT74Ci93KdKxI
XqEC9SWfM56z74EUiPLc5TaIxpcpYHZOZ7IN8a9UQPnKe844otco8HOD4jiL
d60C1aUpe55QftQrEBjdIk1i5z8FBp671ZRGuF2B/a7lryew9+9KyNZ1CMoh
rK3Ey47LVez7Ka4SdyydO8qJrqvEYVtZawT5g6fEnhPqKl2imyhxQOtT/X7y
B1+J8H/6Kl2of1ooMfPJVQc99r5dicS1Cz3S6D29jRI37vr/PkB0O834jkvM
7hI/ByVOpA3q8Zx9j6TEZIt/DU+T/d5KdCvm+DbTfKESI/zOX0wgHKnEr2m+
yvHs/b4SH6va63vS+USqRMKnuw0/SN9MJT518lt/l/hnK+HU6PxnLfveSYnj
tfMvjab1N1cJg7JCXz+an6/EwM0Fpk2EC5VIX5BQJmLfwymhLRzWl30fU6bx
Z0/7JecIVyrRucnkOvveskaJSL7Yawd971OrxBnjW9sKCNcrcVX7tKEVO/8p
0fVNxdqhbP+vRHfHQVkO7PyfgXS+2bJc0l87Awt1dv+8SP7lZmC0q8GUMFrv
dDMw/ZLeygHkP14Ggpu2D7hG+WCSgX3Xz90dQPz4GTjgNWFQFmGLDMxxGBs+
g30vl4GZDa432ffiNhloLQ88UaSx5/8AXjNzTw==
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {}, {}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {}, {}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Var(\[Gamma]) Across 250 Runs\"", TraditionalForm], 
     PlotRange -> {{0, 1001.}, {0, 0.012499906250444209`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Analytic\"", "\"Numerical\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8213852056174765`*^9, 3.8213852352166157`*^9}, {
   3.8213853161524553`*^9, 3.8213853424336524`*^9}, 3.8213853749663506`*^9, {
   3.821385430644794*^9, 3.8213854571755323`*^9}, 3.821385556241845*^9, 
   3.821385590414323*^9, 3.8213856435879836`*^9, 3.821456309137703*^9, 
   3.821456379678618*^9, 3.82145641364069*^9, 3.8214564688590617`*^9, {
   3.8214575833633146`*^9, 3.8214576099754515`*^9}, 3.821458302253604*^9, 
   3.8214586803471766`*^9, 3.8214592239712625`*^9, 3.821459393710678*^9, {
   3.821465085335637*^9, 3.8214651043656487`*^9}, 3.821465573410907*^9, 
   3.8214656507515945`*^9, {3.821466197880692*^9, 3.821466221175948*^9}, {
   3.821466349448063*^9, 3.82146635294136*^9}, 3.82146643586512*^9, 
   3.8214669912809596`*^9, 3.8214671195466733`*^9, 3.8214672196757345`*^9},
 CellLabel->
  "Out[565]=",ExpressionUUID->"0013ae07-7265-4983-8004-f133207dbcd5"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{959, 1012},
WindowMargins->{{-5, Automatic}, {Automatic, 0}},
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (March 18, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"215bdbc7-bcd1-43b5-9f7b-43196d0b927b"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 225, 4, 28, "Input",ExpressionUUID->"08076037-0b70-471b-a470-594aaced9b0a"],
Cell[CellGroupData[{
Cell[808, 28, 220, 5, 160, "Title",ExpressionUUID->"55b3bb64-40ea-41cd-99de-9365c5bfe706"],
Cell[CellGroupData[{
Cell[1053, 37, 160, 3, 67, "Section",ExpressionUUID->"88421183-10a9-47b4-b6d0-76cc66ed4b59"],
Cell[1216, 42, 2757, 55, 107, "Input",ExpressionUUID->"b6b7e482-073c-406c-a85c-7c6cf90b342a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4010, 102, 161, 3, 67, "Section",ExpressionUUID->"c39444d4-d1f7-47d5-937f-c24d658f82f5"],
Cell[CellGroupData[{
Cell[4196, 109, 2536, 71, 184, "Input",ExpressionUUID->"b6b1ee03-c897-40f0-bf30-8bd12057bdd9"],
Cell[6735, 182, 40049, 732, 232, "Output",ExpressionUUID->"2ab1f78e-c87f-41c2-9bf6-c0d123c51d8e"]
}, Open  ]],
Cell[46799, 917, 156, 3, 28, "Input",ExpressionUUID->"71d64a83-ce98-446e-900c-9cbe3ee32804"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46992, 925, 165, 3, 67, "Section",ExpressionUUID->"21289297-ffcd-476b-a7b7-f0805a581157"],
Cell[47160, 930, 2625, 77, 155, "Input",ExpressionUUID->"b58e96eb-e880-4166-bc9a-29788bf26a89"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49822, 1012, 166, 3, 67, "Section",ExpressionUUID->"c7128a13-a319-4e19-9e3b-554e8a5aaa55"],
Cell[CellGroupData[{
Cell[50013, 1019, 10173, 280, 862, "Input",ExpressionUUID->"1722f19a-61c2-42e8-a01e-6895ea42ac81"],
Cell[60189, 1301, 28520, 542, 226, "Output",ExpressionUUID->"e3031817-c138-4427-a6f7-de346ada711c"],
Cell[88712, 1845, 39484, 722, 244, "Output",ExpressionUUID->"07fc7ab2-8837-4c39-951b-c9a5093ed18b"],
Cell[128199, 2569, 28849, 547, 241, "Output",ExpressionUUID->"4f2a2a2c-55aa-4887-a168-864f132fcae3"],
Cell[157051, 3118, 36056, 666, 242, "Output",ExpressionUUID->"aa0098bb-a736-4083-be1d-c4bbc1d6c46f"],
Cell[193110, 3786, 38287, 702, 251, "Output",ExpressionUUID->"0013ae07-7265-4983-8004-f133207dbcd5"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

